<!--
  This file will launch rViz along with the mmWave sensor node and configure a TI mmWave 1443 sensor using a 3D config
 -->

<launch>

	<!-- Call mmWave sensor launch file -->
	<include file="$(find ti_mmwave_rospkg)/launch/ti_mmwave_sensor.launch">
		<arg name="device" value="1443" doc="TI mmWave sensor device type [1443, 1642]"/>
	    <arg name="config" value="3d" doc="TI mmWave sensor device configuration [3d (not supported by 1642 EVM), 2d]"/>
	    <arg name="max_allowed_elevation_angle_deg" value="10" doc="Maximum allowed elevation angle in degrees for detected object data [0 > value >= 90]}"/>
	    <arg name="max_allowed_azimuth_angle_deg" value="60" doc="Maximum allowed azimuth angle in degrees for detected object data [0 > value >= 90]}"/>
	</include>

	<!-- Static transform from map to base_radar_link for visualization of stand-alone mmWave sensor using Rviz -->
	<node pkg="tf" type="static_transform_publisher" name="static_tf_map_to_base_radar_link" args="0 0 0 0 0 0 map base_radar_link 100"/>

	<!-- Launch Rviz with pre-defined configuration to view mmWave sensor detected object data (color by elevation) -->
	<node pkg="rviz" type="rviz" name="rviz" args="-d $(find ti_mmwave_rospkg)/launch/radar_det_obj_color_by_elev.rviz"/> 

	<!-- Record with bag file 
	<node pkg="rosbag" type="record" name="rosbag_record_radar"
		args="record -o /home/nvidia/testdata/radar -a"/> -->
	
	<node pkg="nodelet" type="nodelet" name="standalone_nodelet"  args="manager"/>

	<node pkg="nodelet" type="nodelet" name="octomap_server_nodelet" args="load octomap_server/OctomapServerNodelet standalone_nodelet">
		<param name="resolution" value="0.05" />
		
		<!-- fixed map frame (set to 'map' if SLAM or localization running!) -->
		<param name="frame_id" type="string" value="map" />
		
		<!-- Probabilities for hits and misses in the sensor model when dynamically building a map, default 0.7/0.4 -->
	    <param name="sensor_model/hit" value="0.7" />
	    <param name="sensor_model/miss" value="0.4" />
	    
	    <!-- Minimum and maximum probability for clamping when dynamically building a map, default 0.12/0.97 -->
	    <param name="sensor_model/min" value="0.12" />
	    <param name="sensor_model/max" value="0.97" />
	
	    <!-- max range / depth resolution of the kinect in meter, default: -1 (unlimited) -->
	    <param name="sensor_model/max_range" value="4.0" />
	    <param name="latch" value="false" />
	    
	    <!-- max/min height for occupancy map, should be in meters, default: -/+ infinity -->
	    <param name="pointcloud_max_z" value="10" />
	    <param name="pointcloud_min_z" value="-10" />
		
		<!-- data source to integrate (PointCloud2) -->
		<remap from="octomap_server_nodelet/cloud_in" to="/mmWaveDataHdl/RScan" />
	 
		<!-- output collision map -->
		<remap from="octomap_server_nodelet/collision_map_out" to="collision_map_out"/>
	
	</node>

</launch>
